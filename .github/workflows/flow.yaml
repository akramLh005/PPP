name: flow

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  REGISTRY_NAME: FrontRegistry 
  REGISTRY_BACKEND_NAME: BackRegistry
  IMAGE_NAME: front 
  BACKEND_IMAGE_NAME: backend
  WEBAPP_NAME: NginxApp8
  BACKEND_WEBAPP_NAME: BackendApp-ppp
  RESOURCE_GROUP: PPP
  LOCATION: southafricanorth
  

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest httpx fastapi[all]
  
    - name: Run tests
      run: pytest test.py
      
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to ACR
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./front/dockerfile
        push: true
        tags: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to ACR
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY_BACKEND_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME_BACKEND }}
        password: ${{ secrets.ACR_PASSWORD_BACKEND }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./FastAPI_backend  # adjust this to the location of your backend's Dockerfile
        file: ./FastAPI_backend/dockerfile
        push: true
        tags: ${{ env.REGISTRY_BACKEND_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}

  deploy-to-webapp:
   needs: [build-and-push, build-and-push-backend]
   runs-on: ubuntu-latest
   steps:
   - name: Checkout repository
     uses: actions/checkout@v2
   - name: build-and-deploy
     uses: azure/login@v1
     with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
   - name: Deploy to Web App
     uses: azure/webapps-deploy@v2
     with:
      app-name: ${{ env.WEBAPP_NAME }}
      slot-name: 'production' # specify your slot name here if you have one, otherwise remove this line
      publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} # set this secret in your GitHub repo
      images: '${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}'

   - name: Deploy to Backend Web App
     uses: azure/webapps-deploy@v2
     with:
      app-name: ${{ env.BACKEND_WEBAPP_NAME }}
      slot-name: 'production' # specify your slot name here if you have one, otherwise remove this line
      publish-profile: ${{ secrets.AZURE_BACKEND_WEBAPP_PUBLISH_PROFILE }} # set this secret in your GitHub repo
      images: '${{ env.REGISTRY_BACKEND_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}'

  training-metrics:
    needs: [deploy-to-webapp]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Training Script
        run: |
          export WANDB_API_KEY=${{ secrets.WB_API_KEY }}
          python train.py
