name: flow

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  REGISTRY_NAME: FrontRegistry 
  REGISTRY_BACKEND_NAME: BackRegistry
  IMAGE_NAME: front 
  BACKEND_IMAGE_NAME: backend
  WEBAPP_NAME: NginxFrontApp
  BACKEND_WEBAPP_NAME: BackendApp
  RESOURCE_GROUP: PPP
  LOCATION: southafricanorth
  


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to ACR
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./front/dockerfile
        push: true
        tags: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to ACR
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY_BACKEND_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME_BACKEND }}
        password: ${{ secrets.ACR_PASSWORD_BACKEND }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./FastAPI_backend  # adjust this to the location of your backend's Dockerfile
        file: ./FastAPI_backend/dockerfile
        push: true
        tags: ${{ env.REGISTRY_BACKEND_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}

  deploy-to-webapp:
    needs: [build-and-push, build-and-push-backend]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: 'AzureStack'
    - run: |
        az webapp list --query "[?state=='Running']"
    - name: Set Web App to use new image
      run: |
        az webapp config container set --name ${{ env.WEBAPP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --docker-custom-image-name ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --docker-registry-server-url https://${{ env.REGISTRY_NAME }}.azurecr.io
    - name: Set Backend Web App to use new image
      run: |
        az webapp config container set --name ${{ env.BACKEND_WEBAPP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --docker-custom-image-name ${{ env.REGISTRY_NAME }}
